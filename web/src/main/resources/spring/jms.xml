<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://activemq.apache.org/schema/core
                http://activemq.apache.org/schema/core/activemq-core.xsd
                http://www.springframework.org/schema/jms
                http://www.springframework.org/schema/jms/spring-jms.xsd">

    <!--  lets create an embedded ActiveMQ Broker -->
    <amq:broker useJmx="false" persistent="false" start="true" brokerName="logteam-broker">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:0" />
        </amq:transportConnectors>
    </amq:broker>

    <!--  ActiveMQ destinations to use  -->
    <amq:queue id="amqDestination" physicalName="alertQueue"/>
    <!--<amq:queue physicalName="testQueue" />-->

    <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML -->
    <amq:connectionFactory id="amqConnectionFactory" brokerURL="vm://logteam-broker"/>

    <!-- lets wrap in a pool to avoid creating a connection per send -->
    <bean class="org.springframework.jms.connection.SingleConnectionFactory" id="jmsConnectionFactory">
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
    </bean>
    <!-- Spring JMS Template -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="defaultDestination" ref="amqDestination" />
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <jms:annotation-driven/>

    <jms:listener-container connection-factory="jmsConnectionFactory" factory-id="jmsListenerContainerFactory">

        <!--<jms:listener destination="fbQueue" ref="jmsService" method="processOrder"/>-->

    </jms:listener-container>

</beans>